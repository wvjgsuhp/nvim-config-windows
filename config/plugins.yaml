# ---
# PLUGINS
# ===
# See lua/plugins/*.lua and config/plugins/*.vim for plugin configuration.
# See config/plugins/all.vim for plugin mappings.

# Startup
# -------
- repo: Shougo/dein.vim
- { repo: kyazdani42/nvim-web-devicons, if: has('nvim-0.5') }
- { repo: nvim-lua/plenary.nvim, if: has('nvim-0.5') }
# Lazy Loading
# ==========================================

# ==========================================
# Commands
# --------
- repo: mzlogin/vim-markdown-toc
  on_cmd: [GenTocGFM, GenTocRedcarpet, GenTocGitLab, UpdateToc]
  hook_add: let g:vmt_auto_update_on_save = 0

- repo: Ron89/thesaurus_query.vim
  on_cmd:
    - Thesaurus
    - ThesaurusQueryReplaceCurrentWord
    - ThesaurusQueryLookupCurrentWord
  hook_add: |-
    let g:tq_map_keys = 0
    let g:tq_use_vim_autocomplete = 0

- repo: t9md/vim-choosewin
  on_map: { n: <Plug> }
  hook_add: |-
    let g:choosewin_label = 'ADFGHJKLUIOPQWERT'
    let g:choosewin_label_padding = 5

- repo: numToStr/Comment.nvim
  on_event: VimEnter
  hook_post_source: lua require('Comment').setup()

# ==========================================
# Interface
# ---------
- { repo: itchyny/vim-gitbranch, on_event: FileType }
- { repo: romainl/vim-cool, on_event: [CursorMoved, InsertEnter] }
- { repo: haya14busa/vim-asterisk, on_map: { nv: <Plug> } }
- { repo: haya14busa/vim-edgemotion, on_map: { nx: <Plug> } }
- { repo: t9md/vim-quickhl, on_map: { nx: <Plug> } }
- { repo: rhysd/accelerated-jk, on_map: { n: <Plug> }, if: $SUDO_USER == '' }

- repo: RRethy/vim-illuminate
  on_event: VimEnter

- repo: utilyre/barbecue.nvim
  on_source: nvim-lspconfig
  depends: [nvim-lspconfig, nvim-navic]
  hook_post_source: lua require('barbecue').setup()

- repo: SmiteshP/nvim-navic
  on_source: nvim-lspconfig
  depends: nvim-lspconfig

- repo: kyazdani42/nvim-tree.lua
  on_cmd: [NvimTreeToggle, NvimTreeFindFile]
  depends: nvim-web-devicons
  hook_post_source: lua require('plugins.nvim-tree')

- repo: rcarriga/nvim-notify
  if: has('nvim-0.5')
  on_lua: notify
  hook_post_source: lua require('notify').setup()

- repo: itchyny/vim-cursorword
  on_event: FileType
  hook_add: let g:cursorword = 0
  hook_source: |-
    augroup user_plugin_cursorword
      autocmd!
      autocmd FileType json,yaml,markdown,nginx,dosini,conf,text
        \ let b:cursorword = 1
      autocmd WinEnter * if &diff || &pvw | let b:cursorword = 0 | endif
      autocmd InsertEnter * if get(b:, 'cursorword', 0) == 1
        \| let b:cursorword = 0
        \| endif
      autocmd InsertLeave * if get(b:, 'cursorword', 1) == 0
        \| let b:cursorword = 1
        \| endif
    augroup END

- repo: lewis6991/gitsigns.nvim
  if: has('nvim-0.5')
  on_event: VimEnter
  hook_post_source: lua require('plugins.gitsigns')

- repo: nathanaelkane/vim-indent-guides
  on_event: FileType
  hook_post_source: IndentGuidesEnable
  hook_source: |-
    let g:indent_guides_enable_on_vim_startup = 0
    let g:indent_guides_default_mapping = 0
    let g:indent_guides_tab_guides = 0
    let g:indent_guides_color_change_percent = 3
    let g:indent_guides_guide_size = 1
    let g:indent_guides_exclude_filetypes = [
      \ 'help', 'man', 'fern', 'defx', 'denite', 'denite-filter', 'startify',
      \ 'vista', 'vista_kind', 'tagbar', 'lsp-hover', 'clap_input', 'fzf',
      \ 'any-jump', 'gina-status', 'gina-commit', 'gina-log', 'minimap',
      \ 'quickpick-filter', 'lsp-quickpick-filter', 'lspinfo'
      \ ]
    augroup user_plugin_indentguides
      autocmd!
      autocmd BufEnter *
        \ if ! empty(&l:filetype) && empty(&buftype) && ! &previewwindow
        \|   if g:indent_guides_autocmds_enabled == 0 && &l:expandtab
        \|     IndentGuidesEnable
        \|   elseif g:indent_guides_autocmds_enabled == 1 && ! &l:expandtab
        \|     IndentGuidesDisable
        \|   endif
        \| elseif g:indent_guides_autocmds_enabled == 1
        \|   IndentGuidesDisable
        \| endif
    augroup END

- repo: norcalli/nvim-colorizer.lua
  if: has('nvim-0.4')
  on_event: FileType
  hook_post_source: lua require('plugins.colorizer')

- repo: vimwiki/vimwiki
  on_map: { n: <Plug> }
  on_cmd: [VimwikiIndex, VimwikiUISelect]
  hook_add: |-
    let g:vimwiki_global_ext = 0
    let g:vimwiki_use_calendar = 1
    let g:vimwiki_hl_headers = 1
    let g:vimwiki_hl_cb_checked = 1
    let g:vimwiki_autowriteall = 0
  hook_source: |-
    let g:vimwiki_key_mappings =
    \ {
    \   'all_maps': 1,
    \   'global': 1,
    \   'headers': 1,
    \   'text_objs': 1,
    \   'table_format': 1,
    \   'table_mappings': 1,
    \   'lists': 1,
    \   'links': 1,
    \   'html': 1,
    \   'mouse': 0,
    \ }
    let g:vimwiki_list = [
    \   { 'diary_header': 'Diary',
    \     'diary_link_fmt': '%Y-%m/%d',
    \     'auto_toc': 1,
    \     'path': '~/docs/wiki/',
    \     'syntax': 'markdown',
    \     'ext': '.md' },
    \   { 'path': '~/docs/books/',
    \     'syntax': 'markdown',
    \     'ext': '.md' }
    \ ]

- repo: vim-airline/vim-airline

- repo: MunifTanjim/nui.nvim
  on_event: VimEnter

- repo: SmiteshP/nvim-navbuddy
  on_source: nvim-lspconfig
  depends: [nvim-lspconfig, nvim-navic, nui.nvim]

# ==========================================
# Completion and code analysis
# ----------
- repo: neovim/nvim-lspconfig
  if: has('nvim-0.5')
  on_event: VimEnter
  hook_post_source: lua require('plugins.lspconfig').setup()

- repo: williamboman/nvim-lsp-installer
  if: has('nvim-0.7')
  on_source: nvim-lspconfig

- { repo: hrsh7th/cmp-nvim-lsp, on_source: nvim-lspconfig }
- { repo: kosayoda/nvim-lightbulb, on_source: nvim-lspconfig }
- { repo: folke/lua-dev.nvim, on_source: nvim-lspconfig }

# - repo: ray-x/lsp_signature.nvim
#   if: has('nvim-0.6.1')
#   on_source: nvim-lspconfig

- repo: jose-elias-alvarez/null-ls.nvim
  if: has('nvim-0.7')
  on_source: nvim-lspconfig
  depends: nvim-lspconfig
  hook_post_source: lua require('plugins.null-ls')

- repo: hrsh7th/nvim-cmp
  if: has('nvim-0.5')
  on_event: VimEnter
  depends: [nvim-autopairs, vim-vsnip]
  hook_post_source: lua require('plugins.cmp')

- { repo: hrsh7th/cmp-nvim-lua, on_source: nvim-cmp }
- { repo: hrsh7th/cmp-buffer, on_source: nvim-cmp }
- { repo: hrsh7th/cmp-vsnip, on_source: nvim-cmp }
- { repo: hrsh7th/cmp-path, on_source: nvim-cmp }
- { repo: hrsh7th/cmp-emoji, on_source: nvim-cmp }
- { repo: andersevenrud/cmp-tmux, on_source: nvim-cmp }

- repo: hrsh7th/vim-vsnip
  on_event: InsertEnter
  merged: 0
  hook_add: |-
    let g:vsnip_snippet_dir = expand('$VIM_DATA_PATH/vsnip')
    let g:vsnip_snippet_dirs = [ expand('$VIM_PATH/snippets') ]
    let g:vsnip_filetypes = {}
    let g:vsnip_filetypes.javascriptreact = ['javascript']
    let g:vsnip_filetypes.typescriptreact = ['typescript']

- { repo: hrsh7th/vim-vsnip-integ, on_source: vim-vsnip }
- { repo: rafamadriz/friendly-snippets, merged: 0, on_source: vim-vsnip }

- repo: windwp/nvim-autopairs
  if: has('nvim-0.5')
  hook_post_source: lua require('nvim-autopairs').setup()

- repo: folke/todo-comments.nvim
  if: has('nvim-0.5')
  on_source: [telescope.nvim, neovim/nvim-lspconfig]
  hook_post_source: lua require('plugins.todo-comments')

- repo: folke/trouble.nvim
  if: has('nvim-0.5')
  on_cmd: [Trouble, TroubleToggle]

- repo: sindrets/diffview.nvim
  if: has('nvim-0.5')
  on_cmd: [DiffviewOpen, DiffviewFileHistory]
  hook_post_source: lua require('plugins.diffview').setup()

- repo: nvim-telescope/telescope.nvim
  if: has('nvim-0.7')
  on_event: VimEnter
  hook_post_source: lua require('plugins.telescope').setup()

- repo: nvim-telescope/telescope-ui-select.nvim
  if: has('nvim-0.7')
  on_source: telescope.nvim
  hook_post_source: lua require('telescope').load_extension('ui-select')

- repo: simrat39/symbols-outline.nvim
  if: has('nvim-0.5')
  on_cmd: [SymbolsOutline, SymbolsOutlineOpen]
  hook_source: lua require('plugins.symbols-outline')

- { repo: sbdchd/neoformat, on_cmd: Neoformat }

- repo: mattn/emmet-vim
  on_event: InsertEnter
  on_ft: [html, css, vue, javascript, javascriptreact, svelte]
  hook_source: |-
    let g:user_emmet_mode = 'i'
    let g:user_emmet_install_global = 0
    let g:user_emmet_install_command = 0
    let g:user_emmet_complete_tag = 0

- repo: OmniSharp/omnisharp-vim
  depends: nvim-lspconfig
  on_ft: [cs]
  hook_source: lua require('plugins.omnisharp-vim')

# ==========================================
# Syntax
# ---------
- repo: nvim-treesitter/nvim-treesitter
  if: has('nvim-0.5')
  on_event: VimEnter
  on_cmd: [TSUpdate, TSInstall, TSInstallInfo, TSModuleInfo, TSConfigInfo]
  hook_post_update: ":TSUpdate"
  hook_source: lua require('plugins.treesitter')

- repo: monkoose/matchparen.nvim
  if: has('nvim-0.7')
  on_event: FileType
  hook_post_source: lua require('matchparen').setup()

# Vimscript syntax/indent plugins
- { repo: chrisbra/csv.vim, on_ft: csv }
- { repo: tpope/vim-git, on_ft: [gitcommit, gitrebase, gitconfig] }
- { repo: lifepillar/pgsql.vim, on_ft: pgsql }
- { repo: vim-jp/syntax-vim-ex, on_ft: vim }
- { repo: MTDL9/vim-log-highlighting, on_ft: log }

- repo: pearofducks/ansible-vim
  on_ft: [ansible, ansible_hosts, jinja2]
  hook_add: |-
    let g:ansible_extra_keywords_highlight = 1
    let g:ansible_template_syntaxes = {
      \   '*.json.j2': 'json',
      \   '*.(ba)?sh.j2': 'sh',
      \   '*.ya?ml.j2': 'yaml',
      \   '*.xml.j2': 'xml',
      \   '*.conf.j2': 'conf',
      \   '*.ini.j2': 'ini'
      \ }
    autocmd user_events BufNewFile,BufRead */playbooks/*.{yml,yaml}
      \ setfiletype yaml.ansible
    autocmd user_events BufNewFile,BufRead */inventory/*.ini
      \ setfiletype ansible_hosts

# ==========================================
# Operators and text objects
# ---------
- repo: phaazon/hop.nvim
  on_cmd: [HopWord, HopAnywhere, HopLine, HopChar1, HopChar2]
  hook_post_source: lua require'hop'.setup()

- repo: machakann/vim-sandwich
  on_map:
    nxo: [<Plug>(operator-sandwich-, <Plug>(textobj-sandwich-]
  hook_add: let g:sandwich_no_default_key_mappings = 1

- repo: AndrewRadev/sideways.vim
  on_cmd: [SidewaysLeft, SidewaysRight, SidewaysJumpLeft, SidewaysJumpRight]
  on_map: { n: <Plug>Sideways }

- { repo: AndrewRadev/linediff.vim, on_cmd: [Linediff, LinediffAdd] }

- repo: AndrewRadev/splitjoin.vim
  on_cmd: [SplitjoinJoin, SplitjoinSplit]
  hook_add: |-
    let g:splitjoin_join_mapping = ''
    let g:splitjoin_split_mapping = ''
    autocmd user_events FileType go let b:splitjoin_trailing_comma = 1

- repo: tpope/vim-fugitive
- repo: tpope/vim-repeat
- repo: tpope/vim-surround
- repo: junegunn/fzf
- repo: junegunn/fzf.vim
  on_event: VimEnter

# ==========================================
# Buffer
# --------

- repo: chrisgrieser/nvim-early-retirement
  on_event: VimEnter
  hook_post_source: lua require('early-retirement').setup()
